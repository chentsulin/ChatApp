{
  "name": "redbox-react",
  "description": "A redbox (rsod) component to display your errors.",
  "main": "lib/index.js",
  "scripts": {
    "clean": "rimraf dist lib tmp",
    "build:umd": "webpack src/index.js dist/redbox.js",
    "build:umd:min": "webpack --config webpack.config.prod.js src/index.js dist/redbox.min.js",
    "build:lib": "babel src --out-dir lib",
    "build": "npm run build:umd && npm run build:umd:min && npm run build:lib",
    "lint": "standard ./src",
    "prepublish": "npm run clean && npm run build",
    "test": "npm run lint -s && babel-node ./tests | tap-spec",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KeywordBrain/redbox-react.git"
  },
  "author": {
    "name": "David Pfahler",
    "email": "david@keywordbrain.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/KeywordBrain/redbox-react/issues"
  },
  "homepage": "https://github.com/KeywordBrain/redbox-react",
  "keywords": [
    "redbox",
    "rsod",
    "react",
    "react-native"
  ],
  "devDependencies": {
    "babel": "^5.5.8",
    "babel-core": "^5.6.18",
    "babel-eslint": "^3.1.15",
    "babel-loader": "^5.1.4",
    "rimraf": "^2.3.4",
    "standard": "^5.0.0-2",
    "tap-spec": "^4.0.2",
    "tape": "^4.0.1",
    "webpack": "^1.9.6",
    "webpack-dev-server": "^1.8.2",
    "semantic-release": "^4.0.0"
  },
  "peerDependencies": {
    "react": ">=0.13.2 || ^0.14.0-rc1"
  },
  "dependencies": {
    "error-stack-parser": "^1.2.0",
    "object-assign": "^4.0.1"
  },
  "standard": {
    "parser": "babel-eslint"
  },
  "version": "1.1.1",
  "readme": "# redbox-react\n\n[![Build Status](https://travis-ci.org/KeywordBrain/redbox-react.svg?branch=master)](https://travis-ci.org/KeywordBrain/redbox-react)\n\nThe red box (aka red screen of death) renders an error in this “pretty” format:\n\n<img src=\"http://i.imgur.com/9Jhlibk.png\" alt=\"red screen of death\" width=\"700\" />\n\n## Usage\nCatch an error and give it to react-redbox. Works with\n* [react-hot-loader](https://github.com/gaearon/react-hot-loader) (see [example](https://github.com/KeywordBrain/redbox-react/tree/master/examples/react-hot-loader-example), relies on changes in currently unmerged [pull request](https://github.com/gaearon/react-hot-loader/pull/167))\n* [babel-plugin-react-hot](https://github.com/loggur/babel-plugin-react-hot) & [babel-plugin-react-error-catcher](https://github.com/loggur/babel-plugin-react-error-catcher) (see [example](https://github.com/KeywordBrain/redbox-react/tree/master/examples/babel-plugin-react-hot))\n\nor manually:\n\n```javascript\nconst RedBox = require('redbox-react')\nconst e = new Error('boom')\nconst box = <RedBox error={e} />\n```\n\nHere is a more useful, full-fleged example:\n\n```javascript\n/* global __DEV__ */\nimport React from 'react'\nimport App from './components/App'\n\nconst root = document.getElementById('root')\n\nif (__DEV__) {\n  const RedBox = require('redbox-react')\n  try {\n    React.render(<App />, root)\n  } catch (e) {\n    React.render(<RedBox error={e} />, root)\n  }\n} else {\n  React.render(<App />, root)\n}\n```\n\n## What is this good for?\nAn error that's only in the console is only half the fun. Now you can use all the wasted space where your app would be if it didn’t crash to display the error that made it crash. You should use this in development only.\n\n## Will this catch errors for me?\nNo. As you can see above, this is only a UI component for rendering errors and their stack traces. It's works great with other solutions, that automate the error catching for you, see the [examples](https://github.com/KeywordBrain/redbox-react/tree/master/examples).\n\n## Will you integrate this with react-hot-api?\nThere is already a PR for this: https://github.com/gaearon/react-hot-api/pull/17.\n",
  "readmeFilename": "README.md",
  "_id": "redbox-react@1.1.1",
  "_from": "redbox-react@"
}
